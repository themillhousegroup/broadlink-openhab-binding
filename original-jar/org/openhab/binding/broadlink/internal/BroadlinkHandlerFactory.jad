// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   BroadlinkHandlerFactory.java

package org.openhab.binding.broadlink.internal;

import java.util.*;
import java.util.concurrent.CopyOnWriteArrayList;
import org.eclipse.smarthome.config.discovery.DiscoveryService;
import org.eclipse.smarthome.core.thing.*;
import org.eclipse.smarthome.core.thing.binding.BaseThingHandlerFactory;
import org.eclipse.smarthome.core.thing.binding.ThingHandler;
import org.openhab.binding.broadlink.BroadlinkBindingConstants;
import org.openhab.binding.broadlink.handler.*;
import org.openhab.binding.broadlink.internal.discovery.BroadlinkDeviceDiscoveryService;
import org.osgi.framework.BundleContext;
import org.osgi.framework.ServiceRegistration;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class BroadlinkHandlerFactory extends BaseThingHandlerFactory
{

    public BroadlinkHandlerFactory()
    {
        discoveryServiceRegs = new HashMap();
        channelTypes = new CopyOnWriteArrayList();
        channelGroupTypes = new CopyOnWriteArrayList();
    }

    public boolean supportsThingType(ThingTypeUID thingTypeUID)
    {
        return BroadlinkBindingConstants.SUPPORTED_THING_TYPES_UIDS.contains(thingTypeUID);
    }

    protected ThingHandler createHandler(Thing thing)
    {
        ThingTypeUID thingTypeUID = thing.getThingTypeUID();
        if(logger.isDebugEnabled())
            logger.debug("Creating Thing handler for '{}'", thingTypeUID.getAsString());
        if(thingTypeUID.equals(BroadlinkBindingConstants.THING_TYPE_RM))
            return new BroadlinkRemoteModel2Handler(thing);
        if(thingTypeUID.equals(BroadlinkBindingConstants.THING_TYPE_RM2))
        {
            if(logger.isDebugEnabled())
                logger.debug("org.openhab.binding.broadlink.internal", "RM 2 handler requested created");
            return new BroadlinkRemoteModel2Handler(thing);
        }
        if(thingTypeUID.equals(BroadlinkBindingConstants.THING_TYPE_RM3))
        {
            if(logger.isDebugEnabled())
                logger.debug("org.openhab.binding.broadlink.internal", "RM 3 handler requested created");
            return new BroadlinkRemoteHandler(thing);
        }
        if(thingTypeUID.equals(BroadlinkBindingConstants.THING_TYPE_A1))
        {
            if(logger.isDebugEnabled())
                logger.debug("org.openhab.binding.broadlink.internal", "A1 handler requested created");
            return new BroadlinkA1Handler(thing);
        }
        if(thingTypeUID.equals(BroadlinkBindingConstants.THING_TYPE_MP1))
            return new BroadlinkStripModel1Handler(thing);
        if(thingTypeUID.equals(BroadlinkBindingConstants.THING_TYPE_SP1))
            return new BroadlinkSocketModel1Handler(thing);
        if(thingTypeUID.equals(BroadlinkBindingConstants.THING_TYPE_SP2))
            return new BroadlinkSocketModel2Handler(thing);
        if(thingTypeUID.equals(BroadlinkBindingConstants.THING_TYPE_SP3))
            return new BroadlinkSocketModel3Handler(thing);
        if(thingTypeUID.equals(BroadlinkBindingConstants.THING_TYPE_MP1))
            return new BroadlinkStripModel1Handler(thing);
        if(thingTypeUID.equals(BroadlinkBindingConstants.THING_TYPE_MP2))
        {
            return new BroadlinkStripModel1Handler(thing);
        } else
        {
            thingTypeUID.equals(BroadlinkBindingConstants.THING_TYPE_S1C);
            thingTypeUID.equals(BroadlinkBindingConstants.THING_TYPE_PIR);
            thingTypeUID.equals(BroadlinkBindingConstants.THING_TYPE_MAGNET);
            return null;
        }
    }

    protected synchronized void removeHandler(ThingHandler thingHandler)
    {
        if(thingHandler instanceof BroadlinkControllerHandler)
        {
            ServiceRegistration serviceReg = (ServiceRegistration)discoveryServiceRegs.get(thingHandler.getThing().getUID());
            if(serviceReg != null)
            {
                serviceReg.unregister();
                discoveryServiceRegs.remove(thingHandler.getThing().getUID());
            }
        }
    }

    private synchronized void registerBroadlinkDeviceDiscoveryService(BroadlinkControllerHandler broadlinkControllerHandler)
    {
        BroadlinkDeviceDiscoveryService discoveryService = new BroadlinkDeviceDiscoveryService(broadlinkControllerHandler);
        discoveryServiceRegs.put(broadlinkControllerHandler.getThing().getUID(), bundleContext.registerService(org/eclipse/smarthome/config/discovery/DiscoveryService.getName(), discoveryService, new Hashtable()));
    }

    private final Logger logger = LoggerFactory.getLogger(org/openhab/binding/broadlink/internal/BroadlinkHandlerFactory);
    private Map discoveryServiceRegs;
    private List channelTypes;
    private List channelGroupTypes;
}
